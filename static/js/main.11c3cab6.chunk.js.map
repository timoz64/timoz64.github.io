{"version":3,"sources":["ApiContext.js","components/Chart.js","components/Headline.js","components/NavItem.js","components/Navigation.js","components/InfoColumn.js","App.js","index.js"],"names":["ApiContext","createContext","ApiProvider","props","useState","requestCount","setRequestCount","apiPath","apiEndPoint","temps","tempDescription","api","setApi","fetchUrl","fetch","then","response","json","data","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Provider","value","children","Chart","useContext","labels","chartData","setchartData","newLabels","map","datev","push","date_created","substring","newTemps","tempv","temperature","newHums","humidity","datasets","label","yAxisID","pointStyle","borderColor","borderDash","pointRadius","borderWidth","fill","length","className","headline","options","maintainAspectRatio","legend","display","position","fontColor","scales","yAxes","type","ticks","index","values","max","min","Headline","style","color","marginTop","NavItem","Nav","Link","onClick","endPoint","button_title","Navigation","Navbar","variant","Brand","href","InfoColumn","Col","sm","name","App","numberOfTemps","lastTemp","slice","currentTemp","avgTemps","reduce","prev","cur","avgHumidity","a","hums","Row","Math","floor","ReactDOM","render","StrictMode","Container","document","getElementById"],"mappings":"iQAuBO,IAAMA,EAAaC,0BAEbC,EAAc,SAACC,GAAW,IAAD,EACIC,mBAAS,GADb,mBAC7BC,EAD6B,KACfC,EADe,OAGZF,mBAAS,CAC3BG,QAAS,kDACTC,YAAa,kBACbC,MAAO,GACPC,gBAAiB,oBAPa,mBAG3BC,EAH2B,KAGtBC,EAHsB,KAUlC,SAASC,IAELC,MAAMH,EAAIJ,QAAUI,EAAIH,aAAaO,MAAK,SAAAC,GAAQ,OAC9CA,EAASC,OAAOF,MAAK,SAAAG,GACjBN,EAAO,eACAD,EADD,CAEFF,MAAOS,WAiBvB,OAxDJ,SAAqBC,EAAUC,GAC3B,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACNF,EAAcG,QAAUL,IACzB,CAACA,IAGJI,qBAAU,WAIN,GAAc,OAAVH,EAAgB,CAChB,IAAIK,EAAKC,aAJb,WACIL,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMO,cAAcF,OAEhC,CAACL,IA8BJQ,EAAY,WACRf,IACAP,EAAgBD,EAAe,KAJrB,KAOdkB,qBAAU,WACNV,MACD,CAACF,EAAIH,cAGJ,kBAACR,EAAW6B,SAAZ,CAAqBC,MAAO,CAACnB,EAAKC,IAC7BT,EAAM4B,W,gBCuCJC,EA9FD,SAAC7B,GAAW,IAAD,EACP8B,qBAAWjC,GAAlBW,EADc,sBAEaP,mBAAS,CAAE8B,OAAQ,KAFhC,mBAEdC,EAFc,KAEHC,EAFG,KA8CrB,OA1CAb,qBAAU,WACN,IAAIc,EAAY,GAChB1B,EAAIF,MAAM6B,KAAI,SAAAC,GACV,OAAOF,EAAUG,KAAKD,EAAME,aAAaC,UAAU,EAAG,QAE1D,IAAIC,EAAW,GACfhC,EAAIF,MAAM6B,KAAI,SAAAM,GACV,OAAOD,EAASH,KAAKI,EAAMC,gBAE/B,IAAIC,EAAU,GACdnC,EAAIF,MAAM6B,KAAI,SAAAM,GACV,OAAOE,EAAQN,KAAKI,EAAMG,aAG9BX,EAAa,CACTF,OAAQG,EAAWW,SAAU,CACzB,CACIC,MAAO,eACPC,QAAS,eACThC,KAAMyB,EACNQ,WAAY,OACZC,YAAa,CAAC,8BACdC,WAAY,GACZC,YAAa,EACbC,YAAa,EACbC,MAAM,GAEV,CACIP,MAAO,WACPC,QAAS,WACThC,KAAM4B,EACNK,WAAY,OACZC,YAAa,CAAC,+BACdE,YAAa,EACbC,YAAa,EACbC,MAAM,QAKnB,CAAC7C,EAAIF,QAEHE,EAAIF,OAAUE,EAAIF,MAAMgD,OAGzB,yBAAKC,UAAU,SACX,4BAAKvD,EAAMwD,UACX,kBAAC,IAAD,CACIzC,KAAMiB,EACNyB,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,EACTC,SAAU,MACV9B,OAAQ,CACJ+B,UAAW,YAGnBC,OAAQ,CACJC,MAAO,CAAC,CACJ1C,GAAI,eACJ2C,KAAM,SACNJ,SAAU,OACVK,MAAO,CACHlD,SAAU,SAAUW,EAAOwC,EAAOC,GAC9B,OAAOzC,EAAQ,YAGxB,CACCL,GAAI,WACJ2C,KAAM,SACNJ,SAAU,QACVK,MAAO,CACHG,IAAK,IACLC,IAAK,EACLtD,SAAU,SAAUW,EAAOwC,EAAOC,GAC9B,OAAOzC,EAAQ,aAlCD,mDC/CnC,SAAS4C,IAAY,IAAD,EACjBzC,qBAAWjC,GAAlBW,EADwB,oBAM/B,OACI,6BACI,wBAAIgE,MANU,CAClBC,MAAO,oBACPC,UAAW,SAIP,6BAAqDlE,EAAID,kB,oBCStDoE,EAfC,SAAC3E,GAAW,IAAD,EACD8B,qBAAWjC,GADV,mBAChBW,EADgB,KACXC,EADW,KAWvB,OACI,kBAACmE,EAAA,EAAIC,KAAL,CAAUC,QATd,WACIrE,EAAO,eACAD,EADD,CAEFH,YAAaL,EAAM+E,SACnBxE,gBAAiBP,EAAMgF,kBAKKhF,EAAMgF,e,OCZ/B,SAASC,EAAWjF,GAE/B,OACI,6BACI,kBAACkF,EAAA,EAAD,CAAQ3B,UAAU,YAAY4B,QAAQ,QAClC,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,gBACA,kBAACT,EAAA,EAAD,CAAKrB,UAAU,WACX,kBAAC,EAAD,CAASyB,aAAc,cAAeD,SAAU,oBAChD,kBAAC,EAAD,CAASC,aAAc,eAAgBD,SAAU,qBACjD,kBAAC,EAAD,CAASC,aAAc,YAAaD,SAAU,iB,YCKnDO,G,OAfI,SAACtF,GAChB,OACI,kBAACuF,EAAA,EAAD,CAAKC,IAAE,GACH,yBAAKjC,UAAU,OACX,yBAAKA,UAAU,aACVvD,EAAMyF,MAEX,yBAAKlC,UAAU,YACVvD,EAAMe,UC8CZ2E,MAhDf,SAAa1F,GAAQ,IAAD,EACJ8B,qBAAWjC,GAAlBW,EADW,oBAElB,IAAKA,EAAIF,QAAUE,EAAIF,MAAMgD,OAAU,OAAO,+DAE9C,IAAMqC,EAAgBnF,EAAIF,MAAMgD,OAC1BsC,EAAWpF,EAAIF,MAAMuF,OAAO,GAAG,GAC/BC,EAAW,eAAQF,GAOnBG,EANWvF,EAAIF,MAAM0F,QAAO,SAAUC,EAAMC,GAChD,OAAOD,EAAOC,EAAIxD,cACjB,GAIyBiD,EACtBQ,EAJc3F,EAAIF,MAAM0F,QAAO,SAAUC,EAAMC,GACnD,OAAOD,EAAOC,EAAItD,WACjB,GAE+B+C,EAE5BrF,EAAQE,EAAIF,MAAM6B,KAAI,SAAAiE,GAAC,OAAIA,EAAE1D,eAC7B2D,EAAO7F,EAAIF,MAAM6B,KAAI,SAAAiE,GAAC,OAAIA,EAAExD,YAGlC,OACE,yBAAKW,UAAU,OACb,kBAAC,EAAD,MACA,kBAACgB,EAAD,MACA,kBAAC+B,EAAA,EAAD,KACE,kBAAC,EAAD,CAAYb,KAAK,yBAAyB1E,KAAM4E,KAElD,kBAACW,EAAA,EAAD,KACE,kBAAC,EAAD,CAAYb,KAAK,sBAAsB1E,KAAM+E,EAAYpD,YAAc,UACvE,kBAAC,EAAD,CAAY+C,KAAK,mBAAmB1E,KAAM+E,EAAYlD,SAAW,OAEnE,kBAAC0D,EAAA,EAAD,KACE,kBAAC,EAAD,CAAYb,KAAK,sBAAsB1E,KAAMwF,KAAKC,MAAiB,IAAXT,GAAkB,IAAM,UAChF,kBAAC,EAAD,CAAYN,KAAK,mBAAmB1E,KAAMwF,KAAKC,MAAoB,IAAdL,GAAqB,IAAM,OAElF,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CAAYb,KAAK,kBAAkB1E,KAAMwF,KAAKlC,IAAL,MAAAkC,KAAI,YAAQjG,IAAS,UAC9D,kBAAC,EAAD,CAAYmF,KAAK,eAAe1E,KAAMwF,KAAKlC,IAAL,MAAAkC,KAAI,YAAQF,IAAQ,OAE5D,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAYb,KAAK,kBAAkB1E,KAAMwF,KAAKjC,IAAL,MAAAiC,KAAI,YAAQjG,IAAS,UAC9D,kBAAC,EAAD,CAAYmF,KAAK,eAAe1E,KAAMwF,KAAKjC,IAAL,MAAAiC,KAAI,YAAQF,IAAQ,OAE5D,kBAAC,EAAD,Q,QC7CNI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,SAINC,SAASC,eAAe,U","file":"static/js/main.11c3cab6.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect, createContext } from 'react';\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\n\nexport const ApiContext = createContext();\n\nexport const ApiProvider = (props) => {\n    let [requestCount, setRequestCount] = useState(0);\n\n    const [api, setApi] = useState({\n        apiPath: 'https://th2e-backend.herokuapp.com/temperature/',\n        apiEndPoint: 'last_seven_days',\n        temps: [],\n        tempDescription: 'Last seven days'\n    });\n\n    function fetchUrl() {\n\n        fetch(api.apiPath + api.apiEndPoint).then(response =>\n            response.json().then(data => {\n                setApi({\n                    ...api,\n                    temps: data\n                })\n            }))\n    }\n\n    // Run every 5 minute\n    const delay = 60000 * 5;\n\n    useInterval(() => {\n        fetchUrl()\n        setRequestCount(requestCount + 1);\n    }, delay);\n\n    useEffect(() => {\n        fetchUrl()\n    }, [api.apiEndPoint]) // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <ApiContext.Provider value={[api, setApi]}>\n            {props.children}\n        </ApiContext.Provider>\n    )\n}\n\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { ApiContext } from '../ApiContext'\n\n\nconst Chart = (props) => {\n    const [api] = useContext(ApiContext);\n    const [chartData, setchartData] = useState({ labels: [] })\n\n    useEffect(() => {\n        let newLabels = []\n        api.temps.map(datev => {\n            return newLabels.push(datev.date_created.substring(0, 16))\n        })\n        let newTemps = []\n        api.temps.map(tempv => {\n            return newTemps.push(tempv.temperature)\n        })\n        let newHums = []\n        api.temps.map(tempv => {\n            return newHums.push(tempv.humidity)\n        })\n\n        setchartData({\n            labels: newLabels, datasets: [\n                {\n                    label: 'Temperatures',\n                    yAxisID: 'Temperatures',\n                    data: newTemps,\n                    pointStyle: 'line',\n                    borderColor: ['rgba(225, 160, 144, 1.0  )'],\n                    borderDash: [],\n                    pointRadius: 0,\n                    borderWidth: 3,\n                    fill: false\n                },\n                {\n                    label: 'Humidity',\n                    yAxisID: 'Humidity',\n                    data: newHums,\n                    pointStyle: 'line',\n                    borderColor: ['rgba(190, 208, 202, 1.0   )'],\n                    pointRadius: 0,\n                    borderWidth: 3,\n                    fill: false\n                }\n            ]\n        })\n\n    }, [api.temps])\n\n    if (!api.temps || !api.temps.length) { return <div>No data for Chart</div> }\n    return (\n\n        <div className=\"chart\">\n            <h3>{props.headline}</h3>\n            <Line\n                data={chartData}\n                options={{\n                    maintainAspectRatio: true,\n                    legend: {\n                        display: true,\n                        position: 'top',\n                        labels: {\n                            fontColor: \"#000080\",\n                        }\n                    },\n                    scales: {\n                        yAxes: [{\n                            id: 'Temperatures',\n                            type: 'linear',\n                            position: 'left',\n                            ticks: {\n                                callback: function (value, index, values) {\n                                    return value + ' CÂ°';\n                                }\n                            }\n                        }, {\n                            id: 'Humidity',\n                            type: 'linear',\n                            position: 'right',\n                            ticks: {\n                                max: 100,\n                                min: 0,\n                                callback: function (value, index, values) {\n                                    return value + '%';\n                                }\n                            }\n                        }]\n                    }\n\n                }\n                }\n            />\n        </div>\n\n    )\n}\n\nexport default Chart;","import React, { useContext } from 'react';\nimport { ApiContext } from '../ApiContext'\n\n\nexport default function Headline() {\n    const [api] = useContext(ApiContext)\n    const headlineStyle = {\n        color: 'rgb(67, 105, 105)',\n        marginTop: '2rem'\n    }\n    return (\n        <div>\n            <h3 style={headlineStyle}>Temperature and Humidity: {api.tempDescription}</h3>\n        </div>\n    )\n}\n","import React, { useContext } from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport { ApiContext } from '../ApiContext'\n\n\n\nconst NavItem = (props) => {\n    const [api, setApi] = useContext(ApiContext)\n\n    function changePath() {\n        setApi({\n            ...api,\n            apiEndPoint: props.endPoint,\n            tempDescription: props.button_title\n        })\n    }\n\n    return (\n        <Nav.Link onClick={changePath}>{props.button_title}</Nav.Link>\n    )\n}\nexport default NavItem;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from './NavItem';\nimport './Navigation.css'\n\nexport default function Navigation(props) {\n\n    return (\n        <div>\n            <Navbar className=\"color-nav\" variant=\"dark\">\n                <Navbar.Brand href=\"#\">Measurements</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <NavItem button_title={'Last 7 days'} endPoint={'last_seven_days'} />\n                    <NavItem button_title={'Last 30 days'} endPoint={'last_thirty_days'} />\n                    <NavItem button_title={'This year'} endPoint={'this_year'} />\n                </Nav>\n            </Navbar>\n        </div>\n    )\n}\n","import React from 'react'\nimport Col from 'react-bootstrap/Col'\nimport './InfoColumn.css'\n\n\nconst InfoColumn = (props) => {\n    return (\n        <Col sm>\n            <div className=\"box\">\n                <div className=\"title_box\">\n                    {props.name}\n                </div>\n                <div className=\"data_box\">\n                    {props.data}\n                </div>\n\n            </div>\n        </Col>\n    )\n}\nexport default InfoColumn","import React, { useContext } from 'react';\nimport { ApiContext } from './ApiContext';\n\nimport Row from 'react-bootstrap/Row';\nimport Chart from './components/Chart';\nimport Headline from './components/Headline'\nimport Navigation from './components/Navigation';\nimport InfoColumn from './components/InfoColumn';\n\n\n\nfunction App(props) {\n  const [api] = useContext(ApiContext);\n  if (!api.temps || !api.temps.length) { return <div>No data for TemperatureCounter</div> }\n\n  const numberOfTemps = api.temps.length\n  const lastTemp = api.temps.slice(-1)[0];\n  const currentTemp = { ...lastTemp }\n  const allTemps = api.temps.reduce(function (prev, cur) {\n    return prev + cur.temperature;\n  }, 0);\n  const allHumidity = api.temps.reduce(function (prev, cur) {\n    return prev + cur.humidity;\n  }, 0);\n  const avgTemps = allTemps / numberOfTemps;\n  const avgHumidity = allHumidity / numberOfTemps;\n\n  const temps = api.temps.map(a => a.temperature);\n  const hums = api.temps.map(a => a.humidity);\n\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Headline />\n      <Row>\n        <InfoColumn name=\"Number of Measurements\" data={numberOfTemps} />\n      </Row>\n      <Row>\n        <InfoColumn name=\"Current Temperature\" data={currentTemp.temperature + \"Â°C\"} />\n        <InfoColumn name=\"Current Humidity\" data={currentTemp.humidity + '%'} />\n      </Row>\n      <Row>\n        <InfoColumn name=\"Average Temperature\" data={Math.floor(avgTemps * 100) / 100 + 'Â°C'} />\n        <InfoColumn name=\"Average Humidity\" data={Math.floor(avgHumidity * 100) / 100 + '%'} />\n      </Row>\n      <Row>\n        <InfoColumn name=\"Max Temperature\" data={Math.max(...temps) + 'Â°C'} />\n        <InfoColumn name=\"Max Humidity\" data={Math.max(...hums) + '%'} />\n      </Row>\n      <Row>\n        <InfoColumn name=\"Min Temperature\" data={Math.min(...temps) + 'Â°C'} />\n        <InfoColumn name=\"Min Humidity\" data={Math.min(...hums) + '%'} />\n      </Row>\n      <Chart />\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport { ApiProvider } from './ApiContext';\nimport Container from 'react-bootstrap/Container';\n//  import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApiProvider>\n      <Container>\n        <App />\n      </Container>\n    </ApiProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//  serviceWorker.unregister();\n"],"sourceRoot":""}